name: Trump Quotes

# This workflow is triggered on pushes to the repository.

on: 
  push:
    branches:
      - develop
      - master
    tags: 
      - *
      - v*
    
env:
    KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
    TRUMP_QUOTES_JKS: ${{ secrets.TRUMP_QUOTES_JKS }}
    OCR_SERVER: ${{ secrets.OCR_SERVER }} 
    
jobs:
  build:
    # This job will run on ubuntu virtual machine
    runs-on: ubuntu-latest
    steps:
    
    # Setup Java environment in order to build the Android app.
    - uses: actions/checkout@v1
    - uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    
    # Setup the flutter environment.
    - uses: subosito/flutter-action@v1
      with:
        channel: 'beta' # 'dev', 'alpha', default to: 'stable'
        # flutter-version: '1.12.x' # you can also specify exact version of flutter
    # Set envs based on branch
    - name: Set env to staging
      if: endsWith(github.ref, '/develop')
      run: |
        echo "::set-env name=LANE::beta"
    - name: Set env to production
      if: endsWith(github.ref, '/master')
      run: |
        echo "::set-env name=LANE::deploy"
    # load the files from base64 encoded secrets
    - run: echo $TRUMP_QUOTES_JKS | base64 --decode > android/app/trump_quotes.jks
      name: Decoding Trump Quotes File
    - run: echo $KEY_PROPERTIES | base64 --decode > android/key.properties
      name: Decoding Key Properties
    - run: echo $OCR_SERVER | base64 --decode > android/ocr-server-238704-1b08ee48b859.json
    # Get flutter dependencies.
    - run: flutter pub get
    
    # Check for any formatting issues in the code.
    - run: flutter format --set-exit-if-changed .
    
    # Statically analyze the Dart code for any errors.
    - run: flutter analyze .
    
    # Run widget tests for our flutter project.
    - run: flutter test
    
    # Build apk.
    - run: flutter build apk
    
    # Build appbundle
    - run: flutter build appbundle
    # Upload generated apk to the artifacts.
    - uses: actions/upload-artifact@v1
      with:
        name: release-apk
        path: build/app/outputs/apk/release/app-release.apk

      # Fastlane
    - uses: maierj/fastlane-action@v1.4.0
      with:
        lane: $LANE
        subdirectory: 'android'
